// REF
// - https://github.com/ant-design/ant-design/blob/master/components/style/color/colorPalette.less
// - https://zhuanlan.zhihu.com/p/32422584

@function f-hex-to-hsv($hex-color) {
  // convert
  $r: red($hex-color) / 255;
  $g: green($hex-color) / 255;
  $b: blue($hex-color) / 255;
  $max: max($r, $g, $b);
  $min: min($r, $g, $b);
  // init
  $h: 0;
  $s: 0;
  $v: 0;
  // h deg
  @if ($max == $min) {
    $h: 0deg;
  } @else if ($max == $r and $g >= $b) {
    $h: 60deg * ($g - $b) / ($max - $min) + 0deg;
  } @else if ($max == $r and $g < $b) {
    $h: 60deg * ($g - $b) / ($max - $min) + 360deg;
  } @else if ($max == $g) {
    $h: 60deg * ($b - $r) / ($max - $min) + 120deg;
  } @else if ($max == $b) {
    $h: 60deg * ($r - $g) / ($max - $min) + 240deg;
  }
  // s %
  $s: if($max == 0, 0%, percentage(1 - $min / $max));
  // v %
  $v: percentage($max);
  // return list
  @return $h, $s, $v;
}

@function f-hsv-to-hex($h, $s, $v) {
  $h: $h / 1deg;
  $s: $s / 100%;
  $v: $v / 100%;
  $hi: floor($h / 60);
  $f: $h / 60 - $hi;
  $p: round($v * (1 - $s) * 255);
  $q: round($v * (1 - $f * $s) * 255);
  $t: round($v * (1 - (1 - $f) * $s) * 255);
  $v: round($v * 255);
  @if ($hi == 0) {
    @return rgb($v, $t, $p);
  } @else if ($hi == 1) {
    @return rgb($q, $v, $p);
  } @else if ($hi == 2) {
    @return rgb($p, $v, $t);
  } @else if ($hi == 3) {
    @return rgb($p, $q, $v);
  } @else if ($hi == 4) {
    @return rgb($t, $p, $v);
  } @else if ($hi == 5) {
    @return rgb($v, $p, $q);
  }
}

@function f-get-hue($h, $s, $v, $diff, $is-lighter) {
  $hue: 0deg;
  @if ($h == 0deg and $s == 0%) {
    @return $h;
  }
  @if ($h >= 60deg and $h <= 240deg) {
    $hue: if($is-lighter, $h - 2deg * $diff, $h + 2deg * $diff);
  } @else {
    $hue: if($is-lighter, $h + 2deg * $diff, $h - 2deg * $diff);
  }
  @if ($hue < 0deg) {
    $hue: $hue + 360deg;
  } @else if ($hue >= 360deg) {
    $hue: $hue - 360deg;
  }
  // return deg
  @return round($hue);
}

@function f-get-saturation($h, $s, $v, $diff, $is-lighter) {
  $saturation: 0%;
  @if ($h == 0deg and $s == 0%) {
    @return $s;
  }
  @if ($is-lighter) {
    $saturation: round(($s - 16% * $diff) * 100) / 100;
  } @else if ($diff == 4) {
    $saturation: round(($s + 16%) * 100) / 100;
  } @else {
    $saturation: round(($s + 5% * $diff) * 100) / 100;
  }
  @if ($saturation > 100%) {
    $saturation: 100%;
  }
  @if ($is-lighter == true and $diff == 5 and $saturation > 10%) {
    $saturation: 10%;
  }
  @if ($saturation < 6%) {
    $saturation: 6%;
  }
  @return round($saturation);
}

@function f-get-value($h, $s, $v, $diff, $is-lighter) {
  @if ($is-lighter) {
    @return if(round(($v + 5% * $diff) * 100) / 100 > 100%, 100%, round(($v + 5% * $diff) * 100) / 100);
  }
  @return if(round(($v - 15% * $diff) * 100) / 100 < 0%, 0%, round(($v - 15% * $diff) * 100) / 100);
}

@function f-get-color($hex-color, $idx) {
  @if ($idx == 6) {
    @return $hex-color;
  }
  $is-lighter: $idx <= 6;
  $hsv-color: f-hex-to-hsv($hex-color); // deg, %, %
  $diff: if($is-lighter, 5 + 1 - $idx, $idx - 5 - 1);
  $h: nth($hsv-color, 1); // deg
  $s: nth($hsv-color, 2); // %
  $v: nth($hsv-color, 3); // %
  $new-hex-color: f-hsv-to-hex(
    f-get-hue($h, $s, $v, $diff, $is-lighter),
    f-get-saturation($h, $s, $v, $diff, $is-lighter),
    f-get-value($h, $s, $v, $diff, $is-lighter)
  );
  $a: alpha($hex-color);
  @if ($a == 1) {
    @return $new-hex-color;
  } @else if ($a <= .2) {
    @return change-color($new-hex-color, $alpha: $a * 2);
  } @else if ($a <= .4) {
    @return change-color($new-hex-color, $alpha: $a * 1.5);
  } @else {
    @return change-color($new-hex-color, $alpha: $a);
  }
}
